[comment encoding = UTF-8 /]
[module filelistactivity('http://www.eclipse.org/uml2/3.0.0/UML')]

[template public filelistactivity(c : Class)]
[file ('src/' + c._package.name + '/' + c.name + '.java', false)]
FILELISTACTIVITY
[/file]
[filelistadapter(c)/]
[filelistview(c)/]
[/template]

[template public generalization(c : Class) ]
[if c.getAllUsedInterfaces() -> size()>0]
implements [for (classifier:Classifier | c.getAllUsedInterfaces()) separator(', ')][classifier.name/] [/for][/if][/template]

[template public attributes(p:Property)]	[comment ToDo: multiple attribute types, not only String, int, boolean /]
[if p.type.getAppliedStereotype('profile::Button') <> null][p.type.visibility/] Button [p.type.name/];
[else][p.type.visibility/][if (p.upper = -1 or p.upper > 1)] List<[p.type.name/]>[else] [p.type.name/][/if] [p.name.toLowerFirst()/];
[/if][/template]

[template public associations(a:Association, c:Class)]	[comment ToDo: Aggregation, nondirectional, etc. /]
[for (p:Property | a.navigableOwnedEnd)]
[if (p.type.name <> c.name)][p.visibility/] [if(p.upper > 1 or p.upper = -1)]List<[p.type.name/]>[else][p.type.name/][/if] [p.name/];	// Multiplicity: [p.lower/]..[if (p.upper = -1)]*[else][p.upper/][/if][/if][/for]
[/template]

[template public operation(o : Operation)]
[o.visibility/] [if o.type.oclIsUndefined()]void[else][o.type.name/][/if] [o.name.toLowerFirst()/]([for (p:Parameter | o.ownedParameter) separator(',') ? (p.direction <> ParameterDirectionKind::return)][p.type.name/] [p.name/][/for]) {
	// TODO: Add your code here
	[if not o.type.oclIsUndefined()]return [Returntype(o)/];[/if]
}
[/template]

[template public Returntype(o : Operation)]
[if (o.type.name = 'Integer')]0[elseif (o.type.name = 'Boolean')]false[else]null[/if]
[/template]

[template public genGetterSetter(p : Property)]
public [if (p.upper = -1 or p.upper > 1)]List<[p.type.name/]>[else][p.type.name/][/if] get[ p.name.toUpperFirst()/]() {
	return this.[p.name.toLowerFirst()/];
}
public void set[p.name.toUpperFirst()/]([if (p.upper = -1 or p.upper > 1)]List<[p.type.name/]>[else][p.type.name/][/if] [p.name.toLowerFirst()/]) {
	this.[p.name.toLowerFirst()/] = [p.name.toLowerFirst()/];
}
[/template]

[template public filelistadapter(c : Class)]
[file ('src/' + c._package.name + '/' + c.name + 'Adapter.java', false)]
FILELISTADAPTER
[/file]
[/template]

[template public filelistview(c : Class)]
[file ('res/layout/' + c.name + '.xml', false)]
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
	android:layout_width="match_parent"
	android:layout_height="wrap_content"
	android:orientation="vertical"
	android:padding="5dp">

	<TextView
		android:id="@+id/text1"
		android:textSize="16sp"
		android:textStyle="bold"
		android:textColor="@android:color/white"
		android:layout_width="match_parent"
		android:layout_height="wrap_content" />

	<TextView
		android:id="@+id/text2"
		android:textSize="12sp"
		android:layout_width="match_parent"
		android:layout_height="wrap_content" />
</LinearLayout>
[/file]
[/template]
